  
 Implementation of Retrieval -Augmented Generation 
(RAG) in Chatbot Systems for Enhanced Real -Time 
Customer Support in E -Commerce
 
J.Benita  
Department  of Computer  Science  
and Engineering  
Kalasalingam  Academy  of 
Research  and Education  
Krishnankoil, Virudhunagar, India  
benitaj2014@gmail.com   
Kosireddy Vivek Charan Tej  
Department  of Computer  Science  and 
Engineering  
Kalasalingam  Academy  of Research  
and Education  
Krishnankoil, Virudhunagar, India  
99220041764@klu.ac.in   
                 E.Vinay Kumar  
Department  of Computer  Science  
and Engineering  
Kalasalingam  Academy  of 
Research  and Education  
Krishnankoil, Virudhunagar, 
India  
99220041827@klu.ac.in
      G.Venkata Subbarao  
Department  of Computer  Science  
and Engineering  
Kalasalingam  Academy  of 
Research  and Education  
Krishnankoil, Virudhunagar, India  
99220041829@klu.ac.in  
                   CH.Venkatesh  
Department of Computer  Science  and 
                     Engineering  
  Kalasalingam  Academy  of Research  
              and Education  
   Krishnankoil, Virudhunagar,India  
       99220041826@klu.ac.in  
 
Abstract - This research study  presents an advanced 
chatbot for e -commerce platforms using Retrieval -
Augmented Generation (RAG), a technology that 
significantly enhances conversational AI by combining 
retrieval and generative techniques. E -commerce 
platforms handle diverse customer quer ies, including 
product inquiries, order tracking, and troubleshooting, 
where traditional chatbots often fail to provide accurate 
responses, leading to user dissatisfaction. The RAG -based 
chatbot addresses this by retrieving re levant information 
from sources like product catalogs, FAQs, and customer 
reviews and generating responses tailored to specific 
queries. This approach ensures accurate, contextually 
relevant answers that improve customer satisfaction, 
streamline service pr ocesses, and reduce errors. By 
leveraging the RAG framework, this solution provides 
robust, scalable customer support that enhances 
engagement and optimizes the e -commerce experience.  
Keywords -python, RAG, virtual experience, LLMs,  E-
commerce , Embedding , assistance, customer  care, Vectors, Vector Database, GPT , tokens, BERTs, Services, 
Enhancement.  
I. INTRODUCTION  
In recent years, the demand for real -time customer 
assistance in e -commerce has surged, driven by a shift 
toward online services and increasing customer 
expectations. As businesses strive to provide seamless, 
efficient support, traditional customer service methods, 
such as human -operated helpdesks, are str uggling to keep 
up with high inquiry volumes. Meeting these demands 
requires scalable and personalized solutions, both crucial 
for maintaining customer satisfaction and loyalty.  
To address these challenges, AI -driven chatbots have 
emerged as promising tools, offering benefits such as 
reduced wait times, enhanced response efficiency, and 
24/7 availability. However, existing chatbot models often 
lack the capability to handle complex  queries or retrieve 
context -specific information accurately, especially in a 
fast-paced and competitive e -commerce environment. This 
gap highlights the need for feasibility studies to assess the Proceedings of the Third International Conference on Automation, Computing and Renewable Systems (ICACRS-2024)
IEEE Xplore Part Number: CFP24CB5-ART; ISBN: 979-8-3315-3242-0
979-8-3315-3242-0/24/$31.00 ©2024 IEEE 13812024 3rd International Conference on Automation, Computing and Renewable Systems (ICACRS) | 979-8-3315-3242-0/24/$31.00 ©2024 IEEE | DOI: 10.1109/ICACRS62842.2024.10841586
Authorized licensed use limited to: Nirma University Institute of Technology. Downloaded on January 30,2025 at 10:54:58 UTC from IEEE Xplore.  Restrictions apply. 
  
 viability of deploying advanced AI solutions that can 
overcome these limitations. Previous feasibility studies in 
customer service and AI applications demonstrate the 
critical role of such evaluations in determining the 
practical and operational readiness of new technologies, 
offering insights that inform effective system design and 
implementation.  
Retrieval -Augmented Generation (RAG) presents a 
cutting -edge approach that combines large language 
models (LLMs) with retrieval mechanisms, creating 
chatbots capable of producing accurate, contextually 
relevant responses. RAG -based systems employ a dual 
approach: a retrieval model sources relevant information 
from a predefined database or corpus, and a generation 
model uses this context to generate precise responses. 
This hybrid method supports natural, human -like 
conversation while enabling domain -specific  knowledge 
retrieval, making it ideal for customer assistance in e -
commerce, where queries often require up -to-date, 
product -specific information.  
 
By incorporating feasibility analysis into the evaluation 
process, this study underscores the potential of RAG to 
provide immediate, relevant, and personalized assistance 
in e-commerce. Such AI -driven technologies enhance 
user satisfaction, efficiency, and  scalability, positioning e -
commerce businesses to handle growing inquiry volumes 
with accuracy and speed.  
 
                   Fig1  Existing framework of RAG . 
Figure 1  describes the traditional RAG  work -flow. We can clearly note the process and how the data flows, query 
is processed, and how data is stored into the database .  
II.  LITERATURE REVIE W 
The growing integration of AI technologies into customer 
service systems has significantly transformed how 
businesses manage customer inquiries. Traditional 
methods like email and live chat, while effective, are 
increasingly supplemented by AI -driven chatbots that offer 
greater efficiency, particularly for handling repetitive or 
straightforward queries. Studies emphasize AI's role in 
reducing response times, managing high inquiry volumes, 
and enhancing user satisfaction in e -commerce and other 
domains. However,  challenges related to reliability, 
accuracy, and context -aware responses persist, requiring 
advanced AI solutions tailored to the complex demands of 
modern customer service systems, especially in e -
commerce.  
2.1Traditional chatbot systems and their limitations  
Chatbot systems relying on approaches like TF -IDF and 
bag-of-words have served well in FAQ -based systems but 
fall short in interpreting deeper semantic meanings and 
delivering precise, contextually relevant responses. 
[6]This gap has driven the need for sophisticated models, 
especially in sectors where customer satisfaction depends 
on personalized and accurate interactions. The 
development of deep learning and transformer -based 
models, such as BERT, SBERT , and the Universal 
Sentence Encoder (USE), addresses many of these 
limitations by enhancing chatbots’ ability to understand 
user query context and provide more accurate responses. 
Recent studies indicate that these models have 
significantly improved perfo rmance in customer support 
and other NLP tasks. These advancements underscore the 
potential of modern AI for handling more complex 
interactions. [4] 
2.2Generative AI models and the role of retrieval -
augmented -generation(RAG)  
Generative AI models like ChatGPT and LLaMA3 have 
introduced possibilities for chatbot systems, providing 
human -like, coherent responses from large datasets. While 
effective in open -domain conversations, these models face 
limitations in domain -specific con texts, like e -commerce, 
Proceedings of the Third International Conference on Automation, Computing and Renewable Systems (ICACRS-2024)
IEEE Xplore Part Number: CFP24CB5-ART; ISBN: 979-8-3315-3242-0
979-8-3315-3242-0/24/$31.00 ©2024 IEEE 1382
Authorized licensed use limited to: Nirma University Institute of Technology. Downloaded on January 30,2025 at 10:54:58 UTC from IEEE Xplore.  Restrictions apply. 
  
 unless fine -tuned with relevant data. The introduction of 
retrieval -augmented generation (RAG) has proven 
promising, as it combines retrieval models with 
generative AI, allowing chatbots to fetch relevant 
information from external sources and use this cont ext to 
generate accurate, context -specific responses. RAG’s 
hybrid approach resolves many limitations of traditional 
and generative models, making it highly suitable for real -
time customer support in e -commerce. This study aims to 
build upon these advancem ents by evaluating RAG’s 
effectiveness in delivering context -specific and 
personalized responses within an e -commerce setting, 
addressing critical demands like response relevance, 
speed, and scalability.  [6] 
2.3Real -world applications and case studies in e -
commerce  
The implementation of RAG -based systems in e -
commerce has already shown promising results. For 
instance, Shopee’s AI chatbot "Choki" enhances customer 
satisfaction by addressing predefined queries, though its 
static Q&A approach faces limitations with non -standard 
or complex inquiries. RAG’s ability to combine dynamic 
information retrieval with generative capabilities presents 
a scalable solution, improving flexibility and 
responsiveness in handling a wider array of customer 
queries. Drawing from studies of  RAG implementations, 
such as Shopee’s, this project seeks to analyse  how a 
RAG -based system can handle complex inquiries better 
than existing chatbots while ensuring scalability and 
flexibility. This assessment will consider metrics 
including response speed, accuracy, and user 
satisfaction. [5]  
Fig.2.2 Exciting E -commerce chatbot (Dominos 
chatbot).  
Fig 2.2 shows working process of existing chatbot . We can 
understand that they these chatbots are limited and very 
less featured. To avoid this limitation, we can implement  
RAG into the regular chatbots.  
2.4Challenges and ethical considerations in RAG 
deployment  
Despite RAG's advantages, ethical challenges and 
technical limitations remain. Concerns over AI reliability, 
data privacy, and the appropriateness of generated 
responses are crucial, especially as customer service 
quality is tied directly to business reput ation in e -
commerce. This study addresses these ethical concerns by 
including reliability checks and a feedback loop for 
continuous improvement, essential steps for ensuring a 
trustworthy system. L iterature suggests that integrating 
advanced AI systems like RAG into e -commerce platforms 
enhances real -time, context -aware responses, yet requires 
ongoing human oversight to maintain customer trust and 
alignment with industry standards [4]. 
2.5Establishing the research objective and bridging 
literature gaps  
While traditional and generative models have improved 
Proceedings of the Third International Conference on Automation, Computing and Renewable Systems (ICACRS-2024)
IEEE Xplore Part Number: CFP24CB5-ART; ISBN: 979-8-3315-3242-0
979-8-3315-3242-0/24/$31.00 ©2024 IEEE 1383
Authorized licensed use limited to: Nirma University Institute of Technology. Downloaded on January 30,2025 at 10:54:58 UTC from IEEE Xplore.  Restrictions apply. 
  
 customer interactions, studies point to a gap in evaluating 
RAG’s effectiveness in complex, real -time e -commerce 
applications. This research aims to bridge this gap by 
assessing RAG’s ability to manage intricate, domain -
specific inquiries while maintaining  high response 
accuracy and user satisfaction, building on prior literature 
that highlights RAG's utility in retrieval and generation 
balance. By conducting a comprehensive evaluation of 
RAG in e -commerce settings, this study contributes to 
advancing AI -driven customer support solutions tailored 
to meet the evolving needs of the e -commerce 
industry. [10] 
III.   METHODOLOGY  
This system introduces a scalable and efficient framework 
based on Retrieval -Augmented Generation (RAG) for 
delivering high -quality customer service in an online e -
commerce environment. The design leverages advanced 
retrieval and generation models to provide a seamless 
customer experience tailored to e -commerce needs, such 
as product recommendations, order tracking, and support 
inquiries.  
3.1 System Components  
The e -commerce chatbot comprises two primary 
components: the retrieval model and the generation 
model.  
   3.1.1 Retrieval Model:  This component identifies 
relevant information from diverse sources, including 
product catalogs, order histories, FAQs, customer 
reviews, and support documents. These data sources are 
essential for addressing a broad spectrum of e -commerce 
customer intera ctions and can be structured (e.g., product 
details, order statuses) or unstructured (e.g., customer 
reviews).  
    3.1.2 Generation Model:  The generation component 
utilizes Large Language Models (LLMs) to create 
context -aware, personalized responses from retrieved 
data. By synthesizing information across structured and 
unstructured sources, the generation model can 
effectively respond to a w ide range of inquiries, 
enhancing both relevance and coherence in customer 
communications.  
These components work together to handle varied customer inquiries, including product recommendations, 
order tracking, return policies, and other customer service 
needs, providing an adaptable solution for dynamic e -
commerce settings.  
3.2 RAG in E -commerce Customer Service  
RAG plays a critical role in providing precise, contextual 
responses by blending data retrieval with natural language 
generation. In e -commerce, where customers may pose 
detailed and specific queries, RAG enables the chatbot to 
locate and utilize the most relevant data —whether about 
product specifications or order status —and create 
accurate, customer -friendly answers.  
 
For instance, in response to “When will my order arrive?” 
the retrieval model pulls real -time shipping details from 
the database, while the generation model crafts a response 
like, “Your order is scheduled to arrive by October 5th.” 
This blend of data -driven insights with conversational 
language ensures that the chatbot delivers both precise and 
friendly responses, creating a high -quality customer 
experience.  RAG also optimally naviga tes the vast data in 
e-commerce such as extensive product descriptions, us er 
feedback, and transaction records enabling it to provide 
contextual and specific responses to diverse queries in real 
time.  
3.3 Model Selection  
To implement RAG, the system employs advanced 
retrieval models, such as BM25 or Dense Passage 
Retrieval (DPR), fine -tuned on domain -specific data to 
ensure the retrieval of highly relevant product, service, or 
order information. For the generative componen t, state -of-
the-art LLMs like BERT, GPT -4, or T5 are used, which 
excel in generating human -like, engaging responses 
aligned with the customer’s query context. This integration 
of retrieval and generation models enables the chatbot to 
provide nuanced, infor mative answers that elevate the 
online shopping experience.  
3.4 Data Preparation  
The knowledge base for the e -commerce chatbot is 
constructed from varied data sources, including customer 
support logs, FAQ documents, product catalogs, customer 
reviews, and transaction histories. The data preparation Proceedings of the Third International Conference on Automation, Computing and Renewable Systems (ICACRS-2024)
IEEE Xplore Part Number: CFP24CB5-ART; ISBN: 979-8-3315-3242-0
979-8-3315-3242-0/24/$31.00 ©2024 IEEE 1384
Authorized licensed use limited to: Nirma University Institute of Technology. Downloaded on January 30,2025 at 10:54:58 UTC from IEEE Xplore.  Restrictions apply. 
  
 process involves standardizing and cleaning this raw data 
through text normalization, tokenization, and removing 
irrelevant content to support efficient indexing and 
retrieval. Fine -tuning the retrieval and generative models 
on this e -commerce -specific dat a further enhances the 
chatbot’s ability to respond accurately to product 
inquiries, shipping updates, and other customer service 
requests.  
3.5 System Integration  
To provide real -time and accurate support, the chatbot 
integrates with backend systems, including customer 
databases, inventory systems, order tracking, and support 
modules. This integration allows the chatbot to instantly 
access necessary information for responses to questions 
like, “Where is my order?” or “Can I get a refund for this 
product?” By making the chatbot avai lable across 
multiple platforms such as websites, mobile apps, and 
social media channels customers receive consistent 
support regardless of where they engage.  
 
 
 
IV. RESULTS  AND DISCUSSION  
 
The research enhances customer service in e -
commerce by integrating Retrieval -Augmented 
Generation (RAG) models into chatbot systems. RAG 
models combine the strengths of retrieval -based methods 
and generative models, offering accurate and contextually 
relevant responses by retr ieving information from a 
knowledge base and generating responses accordingly. 
This integration facilitates real -time, context -aware 
assistance for e -commerce customers, improving their 
overall shopping experience.  The first step in t he process  
is to develop a RAG -based chatbot system. This involves 
designing and implementing a chatbot that effectively 
leverages RAG models to answer customer inquiries. The 
system will be integrated with an existing knowledge base 
or a newly developed one, specif ically focused on e -
commerce products, policies, and common customer 
queries. The chatbot’s retrieval component will extract 
relevant information from the knowledge base, while the generative model will formulate coherent responses based 
on that information.  Optimizing both retrieval and 
generation components is crucial. The retrieval mechanism 
will be fine -tuned to efficiently fetch the most relevant data 
from the knowledge base. Enhancing the generative model 
is also essential to ensure that it provides cohe rent and 
contextually appropriate responses to customer queries. 
Fine-tuning these components for e -commerce -specific 
use cases ensures that the chatbot delivers accurate and 
personalized support.  
Evaluating the chatbot’s performance will be a key aspect 
of the project. The proposed system’s effectiveness will be 
assessed through user interactions in real -time scenarios. 
Metrics such as response accuracy, user satisfaction, and 
overall system efficiency will be used to gauge 
performance. By refining these elements, the chatbot can 
be optimized for high performance in customer service 
environments.  
 
Fig.3 Implementation of RAG in Chatbot Systems for 
Enhanced Real -Time Customer Support in E -Commerce.  
Figure 3 show s the implementation of the RAG in to the 
regular chatbots. It explains us flow of the data in  the 
whole process. The query from user in embedded, sent will 
be tallied to the vector database, and then the LLM acts on 
the response , then will be sent to the use.  
 
V. PERFORMANCE ENHANCEMENT  
 
In this process the constrains to be handled are mentioned 
below here:   
 
5.1 Enhancing Performance  
To enhance the chatbot's performance, it is crucial to 
Proceedings of the Third International Conference on Automation, Computing and Renewable Systems (ICACRS-2024)
IEEE Xplore Part Number: CFP24CB5-ART; ISBN: 979-8-3315-3242-0
979-8-3315-3242-0/24/$31.00 ©2024 IEEE 1385
Authorized licensed use limited to: Nirma University Institute of Technology. Downloaded on January 30,2025 at 10:54:58 UTC from IEEE Xplore.  Restrictions apply. 
  
 optimize both the retrieval and generative components of 
the RAG model. Implementing advanced indexing 
techniques, such as dense vector embeddings and efficient 
search algorithms like FAISS (Facebook AI Similarity 
Search), can significantly speed up the re trieval process 
by quickly identifying the most relevant documents from 
the knowledge base. Additionally, fine -tuning the 
generative model on domain -specific data ensures that 
responses are not only contextually appropriate but also 
aligned with the nuance s of e -commerce interactions. 
Leveraging parallel processing and scalable cloud 
infrastructure can further reduce latency, allowing the 
chatbot to handle high volumes of simultaneous user 
queries without degradation in response times. Regular 
performance m onitoring using metrics like response time, 
throughput, and resource utilization enables the 
identification of bottlenecks and facilitates timely 
optimizations. Incorporating caching mechanisms for 
frequently accessed data can also contribute to improved 
performance by minimizing redundant computations and 
database queries.  
 
5.2 Achieving High Accuracy  
Achieving high accuracy in the chatbot's responses 
involves several strategic approaches. Firstly, training the 
model on high -quality, domain -specific datasets that 
encompass a wide range of customer queries, product 
information, and transactional data is essential. This 
ensures that the chatbot has a comprehensive 
understanding of the e -commerce environment it operates 
within. Incorporating techniques such as data 
augmentation and synthetic data generation can help in 
creating a more diverse training set, thereby improving 
the model's ability to generalize to unseen queries. 
Implementing continuous learning pipelines where the 
model is regularly updated with new data and feedback 
from real interactions helps maintain and enhance 
accuracy over time. Addition ally, integrating entity 
recognition and intent classification modules can refine 
the chatbot's ability to understand and respond to specific 
user needs accurately. Utilizing ensemble methods, where 
multiple models are combined to produce a consensus respo nse, can also enhance accuracy by mitigating the 
weaknesses of individual models.  For better output or 
response, the model also needs to be trained and test on 
large number of LLM, which take long time for training 
and testing the model. The LLM model needs be trained on 
various pre -defined LLMs or it should be trained on a LLM 
based on the local memory [13]. 
 
5.3 Ensuring Reliability  
Reliability in the chatbot system is paramount to 
maintaining user trust and satisfaction. This can be 
achieved through rigorous testing and validation processes 
that simulate a wide array of real -world scenarios and user 
interactions. Implementing automat ed testing frameworks 
that continuously evaluate the chatbot's performance 
against predefined benchmarks ensures that any deviations 
or failures are promptly detected and addressed. 
Redundancy mechanisms, such as fallback strategies 
where the chatbot can g racefully escalate complex or 
unresolved queries to human agents, enhance the system's 
reliability by providing uninterrupted support. Monitoring 
tools that track system health, uptime, and error rates in 
real-time allow for proactive maintenance and swift  
resolution of issues. Additionally, employing robust error -
handling protocols ensures that the chatbot can recover 
gracefully from unexpected failures, maintaining 
consistent performance even under adverse conditions. 
Regularly updating and patching the s ystem to protect 
against security vulnerabilities further contributes to the 
overall reliability of the chatbot.  
 
5.4 Reducing Complexity  
Reducing the complexity of the RAG model architecture is 
essential for improving maintainability, scalability, and 
efficiency. Adopting a modular design approach allows 
different components of the chatbot, such as the retrieval 
engine, generative model, an d user interface, to be 
developed, tested, and updated independently. Simplifying 
the retrieval process by using streamlined indexing 
methods and minimizing the number of layers in the 
generative model can reduce computational overhead and 
improve response  times. Additionally, employing Proceedings of the Third International Conference on Automation, Computing and Renewable Systems (ICACRS-2024)
IEEE Xplore Part Number: CFP24CB5-ART; ISBN: 979-8-3315-3242-0
979-8-3315-3242-0/24/$31.00 ©2024 IEEE 1386
Authorized licensed use limited to: Nirma University Institute of Technology. Downloaded on January 30,2025 at 10:54:58 UTC from IEEE Xplore.  Restrictions apply. 
  
 abstraction layers and standardized APIs facilitates easier 
integration with other systems and services, reducing the 
overall system complexity. Utilizing pre -trained models 
and transfer learning techniques can also minimize the 
need for extensive custom d evelopment, allowing the 
chatbot to leverage existing knowledge bases effectively. 
Implementing containerization technologies like Docker 
and orchestration tools like Kubernetes can further 
simplify deployment and scaling processes, ensuring that 
the chatb ot remains efficient as it grows to accommodate 
increasing user demands.   
 
5.5 Enhancing Real -Time Support  
Enhancing real -time support involves ensuring that the 
chatbot can respond to user queries instantaneously and 
handle high traffic volumes without lag. This can be 
achieved by optimizing the underlying infrastructure for 
low latency, such as using high -performance servers and 
fast networking components. Additionally, employing 
asynchronous processing techniques allows the chatbot to 
handle multiple queries concurrently, improving overall 
throughput. Preloading frequently accessed data and 
utilizing in -memor y databases like Redis can significantly 
reduce data retrieval times, enabling quicker response 
generation. Edge computing can also bring computation 
closer to the user, further reducing latency and enhancing 
the real -time experience. Continuous performance tuning 
and stress testing ensure that the chatbot remains 
responsive under varying load conditions, providi ng a 
seamless real -time support experience for users  [14].  
 
5.6 Handling Repetitive Queries  
Effectively handling repetitive queries can significantly 
improve the efficiency and user experience of the chatbot. 
Implementing caching mechanisms to store responses to 
common questions allows the chatbot to retrieve and 
deliver answers instantly without  reprocessing each 
request. Developing a comprehensive Frequently Asked 
Questions (FAQ) module that covers the most common 
user inquiries ensures that repetitive queries are addressed 
consistently and accurately. Additionally, using pattern 
recognition and  intent classification can help identify and categorize repetitive queries, enabling the chatbot to 
provide standardized responses quickly. Incorporating 
natural language understanding (NLU) techniques to 
recognize variations of the same question ensures that the 
chatbot can handle repetitive queries  even when phrased 
differently. Moreover, analysing  interaction logs to 
identify emerging repetitive queries can help in proactively 
updating the FAQ module and refining the chatbot's 
response strategies. By min imizing the computational load 
associated with repetitive queries, the system can allocate 
more resources to handling unique and complex 
interactions, thereby enhancing overall efficiency and user 
satisfaction. ng.  
VI. CONCLUSION  
 
Integrating Retrieval -Augmented Generation 
(RAG) models into e -commerce chatbots enhances 
customer service by providing accurate, contextually 
relevant responses to user inquiries. The RAG -based 
chatbot effectively combines retrieval and generative 
techniq ues, leveraging an e -commerce -specific knowledge 
base to deliver quality interactions aligned with customer 
expectations. Key phases, including system design, 
component optimization, and performance evaluation, 
ensure robust functionality.  Addressing data quality and 
user experience challenges through continuous monitoring 
and iterative improvement will support scalability and 
adaptation to customer needs. This research highlights the 
transformative impact of RAG technology in streamlining 
customer service and enhancing the e -commerce 
experience, paving the way for future advancements in AI -
driven support solutions.  
 
REFERENCES  
 
[1] Islam , Muhamad  Anbiya  Nur, Budi Warsito , and O kydwi  Nurhayati . 
"Ai-Driven  Chatbot  Implementation for  Enhancing  Customer  Service  
in Higher  Education : A C ase Study from Universitas  Negeri  Semarang ." 
Journal of Theoretical and Applied Information Technology 102, no. 14 
(2024).  
[2]  Dey, Sharmistha. "Artificial Intelligence: A New Driver for 
Managing Customers in E -Commerce Smartly." In Applications of 
Artificial Intelligence in Business and Finance, pp. 29 -49. Apple Proceedings of the Third International Conference on Automation, Computing and Renewable Systems (ICACRS-2024)
IEEE Xplore Part Number: CFP24CB5-ART; ISBN: 979-8-3315-3242-0
979-8-3315-3242-0/24/$31.00 ©2024 IEEE 1387
Authorized licensed use limited to: Nirma University Institute of Technology. Downloaded on January 30,2025 at 10:54:58 UTC from IEEE Xplore.  Restrictions apply. 
  
 Academic Press, 2021.  
[3] Yang, Xinyi. "Understanding Chatbot service encounters: 
Consumers’ satisfactory and dissatisfactory experiences." Master's 
thesis, X. Yang, 2020.  
[4] Jeong, Cheonsu. "A Study on the Implementation Method of an 
Agent -Based Advanced RAG System Using Graph." arXiv preprint 
arXiv:2407.19994 (2024).  
[5]  Kulkarni, Mandar, Praveen Tangarajan, Kyung Kim, and Anusua 
Trivedi. "Reinforcement Learning for Optimizing RAG for Domain 
Chatbots." arXiv preprint arXiv:2401.06800 (2024).  
[6]  Radhakrishnan, Akhilesh. "Retrieval Is All You Need: Developing 
an AI Powered Chatbot with RAG in Azure." (2024).  
[7] Torres, Juan José González, Mihai Bogdan Bîndilă, Sebastiaan 
Hofstee, Daniel Szondy, Quang Hung Nguyen, Shenghui Wang, and 
Gwenn Englebienne. "Automated Question -Answer Generation for 
Evaluating RAG -based Chatbots." In 1st Workshop on Patient -
Oriented Lang uage Processing, CL4Health 2024, pp. 204 -214. 
European Language Resources Association (ELRA), 2024.  
[8] Gardiner, Brian. "E -Business Security in RAG order."  School of 
Computing Dublin Institute of Technolog, Ireland  (2003).  
[9] Analytics, Data, and Dishant Sukhwal. "Retrieval Augmented 
Generation: An Evaluation of RAG -based Chatbot for Customer 
Support." (2024).  
[10] Rokon, Md Omar Faruk, Weizhi Du, Zhaodong Wang, and Musen 
Wen. "Next -Gen Sponsored Search: Crafting the Perfect Query with 
Inventory -Aware RAG (InvAwr -RAG) -Based GenAI." (2024).  
[11] Adamopoulou, Eleni, and Lefteris Moussiades. "An overview of 
chatbot technology." In  IFIP international conference on artificial 
intelligence applications and innovations , pp. 373 -383. Springer, 
Cham, 2020.  
[12] Lokman, Abbas Saliimi, and Mohamed Ariff Ameedeen. 
"Modern chatbot systems: A technical review." In  Proceedings of the 
Future Technologies Conference (FTC) 2018: Volume 2 , pp. 1012 -
1023. Springer International Publishing, 2019.  
[13] Adamopoulou, Eleni, and Lefteris Moussiades. "An overview of 
chatbot technology." In  IFIP international conference on artificial 
intelligence applications and innovations , pp. 373 -383. Springer, 
Cham, 2020.  
[14] Leonhardt, Michelle Denise, Liane Tarouco, Rosa Maria Vicari, 
Elder Rizzon Santos, and Michele dos Santos da Silva. "Using chatbots 
for network management training through problem -based oriented 
education." In  Seventh IEEE International Conference on Advanced 
Learning Technologies (ICALT 2007) , pp. 845 -847. IEEE, 2007.  
[15] de Freitas, Bruno Amaral Teixeira, and Roberto de Alencar 
Lotufo. "Retail -GPT: leveraging Retrieval Augmented Generation 
(RAG) for building E -commerce Chat Assistants."  arXiv preprint 
arXiv:2408.08925  (2024).  
 Proceedings of the Third International Conference on Automation, Computing and Renewable Systems (ICACRS-2024)
IEEE Xplore Part Number: CFP24CB5-ART; ISBN: 979-8-3315-3242-0
979-8-3315-3242-0/24/$31.00 ©2024 IEEE 1388
Authorized licensed use limited to: Nirma University Institute of Technology. Downloaded on January 30,2025 at 10:54:58 UTC from IEEE Xplore.  Restrictions apply. 